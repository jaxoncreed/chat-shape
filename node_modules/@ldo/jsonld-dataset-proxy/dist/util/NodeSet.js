"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeSet = exports.nodeToString = void 0;
function nodeToString(node) {
    if (node == null) {
        return "null";
    }
    switch (node.termType) {
        case "NamedNode":
            return `namedNode(${node.value})`;
        case "BlankNode":
            return `blankNode(${node.value})`;
        case "Literal":
            return `literal(${node.value},${node.datatype.value})`;
        case "DefaultGraph":
            return "defaultGraph()";
    }
}
exports.nodeToString = nodeToString;
class NodeSet {
    constructor() {
        this.set = new Set();
        this.map = {};
    }
    add(node) {
        const key = nodeToString(node);
        this.set.add(key);
        this.map[key] = node;
    }
    has(node) {
        return this.set.has(nodeToString(node));
    }
    delete(node) {
        const key = nodeToString(node);
        delete this.map[key];
        return this.set.delete(nodeToString(node));
    }
    toArray() {
        return Array.from(this.set).map((stringVal) => {
            return this.map[stringVal];
        });
    }
}
exports.NodeSet = NodeSet;
//# sourceMappingURL=NodeSet.js.map