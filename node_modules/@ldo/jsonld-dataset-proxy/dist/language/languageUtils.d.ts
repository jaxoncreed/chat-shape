import type { Dataset, Literal, Quad, Quad_Object } from "@rdfjs/types";
import type { ObjectNode, PredicateNode, SubjectNode } from "@ldo/rdf-utils";
import type { LanguageKey, LanguageOrdering } from "./languageTypes";
export declare function languageMatch(dataset: Dataset, subject: ObjectNode, predicate: PredicateNode, languageKey: LanguageKey): Dataset<LiteralObjectQuad>;
export declare function languageDeleteMatch(dataset: Dataset, subject: SubjectNode, predicate: PredicateNode, languageKey: LanguageKey): void;
export declare function isLanguageLiteral(node: Quad_Object): node is Literal;
export interface LiteralObjectQuad extends Quad {
    object: Literal;
}
export declare function quadsToLanguageQuadMap(quads: Dataset): Record<LanguageKey, Dataset<LiteralObjectQuad>>;
export declare function filterQuadsByLanguageOrdering(quads: Dataset, languageOrdering: LanguageOrdering): Dataset;
export declare function getLanguageKeyForWriteOperation(languageOrdering: LanguageOrdering): LanguageKey | undefined;
export declare function languageKeyToLiteralLanguage(languageKey: string | symbol): string;
export declare function literalLanguageToLanguageKey(literalLanguage: string): string;
