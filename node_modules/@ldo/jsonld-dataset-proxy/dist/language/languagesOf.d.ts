import type { ObjectLike } from "../types";
export type LanguageMap = {
    "@none"?: string;
    [language: string]: string | undefined;
};
export type LanguageSetMap = {
    "@none"?: LanguageSet;
    [language: string]: LanguageSet | undefined;
};
export type LanguageSet = Set<string>;
export type LanguageOfConditionalReturn<SubjectObject extends ObjectLike, Key extends keyof SubjectObject> = NonNullable<SubjectObject[Key]> extends Array<unknown> ? LanguageSetMap : LanguageMap;
export declare function languagesOf<SubjectObject extends ObjectLike, Key extends keyof SubjectObject>(subjectObject: SubjectObject, key: Key): LanguageOfConditionalReturn<SubjectObject, Key>;
