"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteValueFromDataset = void 0;
const data_model_1 = require("@rdfjs/data-model");
function deleteValueFromDataset(target, key, proxyContext) {
    const nodesToRemove = [];
    if (key === "@context") {
        return true;
    }
    if (key === "toString" || key === Symbol.toStringTag) {
        return true;
    }
    if (typeof key === "symbol") {
        return true;
    }
    const subject = target["@id"];
    const predicate = (0, data_model_1.namedNode)(proxyContext.contextUtil.keyToIri(key, proxyContext.getRdfType(subject)));
    if (key === "@id") {
        nodesToRemove.push(target["@id"]);
    }
    else {
        const objectDataset = proxyContext.dataset.match(subject, predicate);
        if (objectDataset.size === 0) {
            return true;
        }
        else {
            nodesToRemove.push(...objectDataset.toArray().map((quad) => quad.object));
        }
    }
    nodesToRemove.forEach((term) => {
        if (term.termType === "Literal") {
            proxyContext.dataset.delete((0, data_model_1.quad)(subject, predicate, term));
            return true;
        }
        else if (term.termType === "NamedNode") {
            proxyContext.dataset.deleteMatches(term, undefined, undefined);
            proxyContext.dataset.deleteMatches(undefined, undefined, term);
            return true;
        }
    });
    return true;
}
exports.deleteValueFromDataset = deleteValueFromDataset;
//# sourceMappingURL=deleteFromDataset.js.map