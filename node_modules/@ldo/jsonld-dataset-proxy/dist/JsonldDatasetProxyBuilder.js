"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonldDatasetProxyBuilder = void 0;
const data_model_1 = require("@rdfjs/data-model");
class JsonldDatasetProxyBuilder {
    constructor(proxyContext) {
        this.proxyContext = proxyContext;
    }
    write(...graphs) {
        return new JsonldDatasetProxyBuilder(this.proxyContext.duplicate({ writeGraphs: graphs }));
    }
    setLanguagePreferences(...languageOrdering) {
        return new JsonldDatasetProxyBuilder(this.proxyContext.duplicate({ languageOrdering }));
    }
    fromSubject(subject) {
        return this.proxyContext.createSubjectProxy(subject);
    }
    matchSubject(predicate, object, graph) {
        return this.proxyContext.createArrayProxy([null, predicate, object, graph], true);
    }
    matchObject(subject, predicate, graph) {
        return this.proxyContext.createArrayProxy([
            subject,
            predicate,
            null,
            graph,
        ]);
    }
    fromJson(inputData) {
        const entryNode = inputData["@id"]
            ? (0, data_model_1.namedNode)(inputData["@id"])
            : (0, data_model_1.blankNode)();
        const proxy = this.fromSubject(entryNode);
        Object.entries(inputData).forEach(([key, value]) => {
            proxy[key] = value;
        });
        return proxy;
    }
}
exports.JsonldDatasetProxyBuilder = JsonldDatasetProxyBuilder;
//# sourceMappingURL=JsonldDatasetProxyBuilder.js.map