import type { ContextDefinition } from "jsonld";
import type { LdoJsonldContext } from "./LdoJsonldContext";
import type { NamedNode } from "@rdfjs/types";
export declare class ContextUtil {
    readonly context: ContextDefinition | LdoJsonldContext;
    private iriToKeyMap;
    private typeNameToIriToKeyMap;
    constructor(context: ContextDefinition | LdoJsonldContext);
    private createIriToKeyMap;
    private getRelevantContext;
    private keyIdToIri;
    keyToIri(key: string, typeName: NamedNode[]): string;
    iriToKey(iri: string, typeNames: NamedNode[]): string;
    getDataType(key: string, typeName: NamedNode[]): string;
    isArray(key: string, typeName: NamedNode[]): boolean;
    isLangString(key: string, typeName: NamedNode[]): boolean;
}
