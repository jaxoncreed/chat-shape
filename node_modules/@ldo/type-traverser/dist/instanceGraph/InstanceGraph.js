"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceGraph = void 0;
const MultiMap_1 = require("../transformer/transformerSubTraversers/util/MultiMap");
const createInstanceNodeFor_1 = require("./nodes/createInstanceNodeFor");
class InstanceGraph {
    constructor(traverserDefinitions) {
        this.objectMap = new MultiMap_1.MultiMap();
        this.traverserDefinitions = traverserDefinitions;
    }
    getNodeFor(instance, typeName) {
        let potentialNode;
        const isCachable = this.traverserDefinitions[typeName].kind !== "primitive" &&
            typeof instance === "object" &&
            instance != null;
        if (isCachable) {
            potentialNode = this.objectMap.get(instance, typeName);
        }
        if (potentialNode)
            return potentialNode;
        const newNode = (0, createInstanceNodeFor_1.createInstanceNodeFor)(instance, typeName, this);
        if (isCachable) {
            this.objectMap.set(instance, typeName, newNode);
        }
        newNode._recursivelyBuildChildren();
        return newNode;
    }
}
exports.InstanceGraph = InstanceGraph;
//# sourceMappingURL=InstanceGraph.js.map