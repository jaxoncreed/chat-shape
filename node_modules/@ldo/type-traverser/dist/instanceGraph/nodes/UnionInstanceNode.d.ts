import type { TraverserTypes, UnionType } from "../../traverser/TraverserTypes";
import type { InstanceNodeFor } from "./createInstanceNodeFor";
import { InstanceNode } from "./InstanceNode";
export declare class UnionInstanceNode<Types extends TraverserTypes<any>, TypeName extends keyof Types, Type extends UnionType<keyof Types> & Types[TypeName]> extends InstanceNode<Types, TypeName, Type> {
    private childNode;
    _setChild(child: InstanceNodeFor<Types, Type["typeNames"]>): void;
    child(): InstanceNodeFor<Types, Type["typeNames"]>;
    allChildren(): InstanceNodeFor<Types, Type["typeNames"]>[];
    _recursivelyBuildChildren(): void;
}
