"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceInstanceNode = void 0;
const InstanceNode_1 = require("./InstanceNode");
class InterfaceInstanceNode extends InstanceNode_1.InstanceNode {
    constructor(graph, instance, typeName) {
        super(graph, instance, typeName);
        this.children = {};
    }
    _setChild(propertyName, child) {
        this.children[propertyName] = child;
    }
    child(propertyName) {
        return this.children[propertyName];
    }
    allChildren() {
        return Object.values(this.children).flat();
    }
    _recursivelyBuildChildren() {
        Object.entries(this.instance).forEach(([propertyName, value]) => {
            const propertyTypeName = this.traverserDefinition.properties[propertyName];
            if (!propertyTypeName)
                return;
            const initChildNode = (val) => {
                const node = this.graph.getNodeFor(val, propertyTypeName);
                node._setParent([this.typeName, propertyName], this);
                return node;
            };
            const childNode = (Array.isArray(value)
                ? value.map((val) => initChildNode(val))
                : initChildNode(value));
            this._setChild(propertyName, childNode);
        });
    }
}
exports.InterfaceInstanceNode = InterfaceInstanceNode;
//# sourceMappingURL=InterfaceInstanceNode.js.map