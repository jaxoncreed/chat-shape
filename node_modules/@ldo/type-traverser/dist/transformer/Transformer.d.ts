import type { ApplyTransformerReturnTypesDefaults, TransformerInputReturnTypes, TraverserDefinitions, TraverserTypes } from "..";
import type { TransformersInput } from "./Transformers";
export declare class Transformer<Types extends TraverserTypes<any>, InputReturnTypes extends TransformerInputReturnTypes<Types>, Context = undefined> {
    private traverserDefinition;
    private transformers;
    constructor(traverserDefinition: TraverserDefinitions<Types>, transformers: TransformersInput<Types, InputReturnTypes, Context>);
    private applyDefaultInterfaceTransformerProperties;
    private applyDefaultInterfaceTransformer;
    private applyDefaultUnionTransformer;
    private applyDefaultPrimitiveTransformer;
    private applyDefaultTransformers;
    transform<TypeName extends keyof Types>(item: Types[TypeName]["type"], itemTypeName: TypeName, context: Context): Promise<ApplyTransformerReturnTypesDefaults<Types, InputReturnTypes>[TypeName]["return"]>;
}
