import type { GraphNode, QuadMatch, SubjectNode } from "@ldo/rdf-utils";
import type { LanguageOrdering, JsonldDatasetProxyBuilder } from "@ldo/jsonld-dataset-proxy";
import type { ShapeType } from "./ShapeType";
import type { LdoBase } from "./util";
export declare class LdoBuilder<Type extends LdoBase> {
    private jsonldDatasetProxyBuilder;
    private shapeType;
    constructor(jsonldDatasetProxyBuilder: JsonldDatasetProxyBuilder, shapeType: ShapeType<Type>);
    fromSubject(subject: SubjectNode | string): Type;
    matchSubject(predicate: QuadMatch[1] | string, object?: QuadMatch[2] | string, graph?: QuadMatch[3] | string): Type[];
    matchObject(subject?: QuadMatch[0] | string, predicate?: QuadMatch[1] | string, graph?: QuadMatch[3] | string): Type[];
    fromJson(inputData: Type): Type;
    write(...graphs: (GraphNode | string)[]): LdoBuilder<Type>;
    setLanguagePreferences(...languageOrdering: LanguageOrdering): LdoBuilder<Type>;
}
